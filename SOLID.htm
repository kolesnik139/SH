акроним<br>
<b>Single Responsibility</b> Каждый класс (модуль) должен иметь (инкапсулировать) одну четко определенную ответственность. Одну причину для изменения.<br>
<b>Open-Closed</b> Сущности должны быть открыты для расширения, но закрыты для изменения.<br>
<b>Liskov Substitution</b> Объекты подкласса должны быть заменяемы объектами суперкласса без нарушения правильности программы.<br>
<b>Interface Segregation</b> Интерфейсы должны быть мелкими и специфичными. Должны содержать только необходимые методы.<br>
<b>Dependency Inversion</b> Высокоуровневые модули не должны зависеть от низкоуровневых модулей. Оба типа модулей должны зависеть от абстракций.<br>